{
  "name": "Become Fire",
  "type": "spell",
  "img": "https://i.imgur.com/iUqZWF8.png",
  "system": {
    "description": {
      "value": "<p>You Become a burst of elemental flames. Until the start of your next turn, you gain the following benefits:</p><ul><li><p>You are resistant to bludgeoning, piercing and slashing damage from nonmagical attacks.</p></li><li><p>You can move through the space of other creatures and ignore difficult terrain; the first time you enter the space of another creature on a turn, it takes 1d6 fire damage.</p></li><li><p>Once during your turn when you roll fire damage, you can maximize the value of one die of fire damage.</p></li></ul>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "round"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": ""
    },
    "consume": {
      "type": "",
      "target": null,
      "amount": null
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": "",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 2,
    "school": "trs",
    "components": {
      "vocal": true,
      "somatic": true,
      "material": false,
      "ritual": false,
      "concentration": false
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [],
  "flags": {
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[postActiveEffects]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false
    },
    "itemacro": {
      "macro": {
        "name": "Become Fire",
        "type": "script",
        "scope": "global",
        "command": "const FEATURE_IMAGE = \"icons/magic/fire/explosion-fireball-medium-orange.webp\";\n\nif (args[0].macroPass === \"preItemRoll\" || args[0].macroPass === \"postDamageRoll\") {\n\n    if (args[0].macroPass === \"preItemRoll\") {\n        if (actor.getFlag(\"world\", \"gw.becomeFire.prompt\") === \"reset\") {\n            await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", true);\n            return;\n        }\n        if (actor.getFlag(\"world\", \"gw.becomeFire.prompt\") !== true) {\n            return;\n        }\n        if (\n            !workflow.item.system.damage.parts.filter(p => p.includes(\"fire\")).length\n        ) { return; }\n\n        const dicePool = workflow.item.system.damage.parts.filter(p => p.includes('fire')).last()\n        const dice = dicePool[0];\n\n        await Dialog.wait(\n\n            new Dialog({\n                title: \"CONFLIGRATE!\",\n                content: `You've hit for ${dice} fire damage do you want to maximise ONE of the largest dice?,`,\n                buttons: {\n                    YES: {\n                        label: \"ðŸ”¥ YES! ðŸ”¥\",\n                        callback: async () => {\n                            await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", false);\n                            await actor.setFlag(\"world\", \"gw.becomeFire.max\", true);\n                            await MidiQOL.completeItemRoll(workflow.item);\n                        }\n                    },\n                    no: {\n                        label: \"No...\",\n                        callback: async () => {\n                            await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", \"reset\");\n                            await MidiQOL.completeItemRoll(workflow.item);\n                        }\n                    }\n                },\n                default: 'no',\n                close: async () => {\n                    await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", \"reset\");\n                    await MidiQOL.completeItemRoll(workflow.item);\n                }\n            }).render(true)\n\n        )\n\n    }\n\n    if (args[0].macroPass === \"postDamageRoll\") {\n        if (actor.getFlag(\"world\", \"gw.becomeFire.max\")) {\n\n            if (workflow.hitTargets.size < 1) {\n                await actor.unsetFlag(\"world\", \"gw.becomeFire.max\");\n                await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", true);\n                return;\n            }\n\n            const dice = workflow.item.system.damage.parts.filter(p => p.includes(\"fire\"))[0][0]\n            const newDice = max(dice)\n            let rollFormula = workflow.damageRoll.formula.replace(dice, newDice)\n            const roll = await new Roll(rollFormula).roll({ async: true });\n            await workflow.setDamageRoll(roll);\n            await actor.unsetFlag(\"world\", \"gw.becomeFire.max\")\n        }\n    }\n\n\n    function max(dice) {\n        let out = dice.split(' ')\n            .filter((s, idx, arr) => {\n                return s.includes('d') && arr[idx - 1] !== '-';\n            })\n            .filter((s) => parseInt(s.split('d', 2)[1], 10));\n\n        out.sort((a, b) => {\n            let [aCount, aSize] = a.split('d', 2);\n            let [bCount, bSize] = b.split('d', 2);\n\n            return bSize - aSize ? bSize - aSize : bCount - aCount;\n        });\n        let [dCount, dSize] = out[0].split(\"d\", 2);\n\n        return dice.replace(out[0], `${dCount - 1}d${dSize} + ${dSize}`);\n    }\n\n} else {\n\n    if (actor.effects.filter(ef => ef.label === \"Become Fire\").length !== 0) { return; }\n\n\n    const featureData = {\n        \"name\": \"Become Fire - Ignite\",\n        \"type\": \"feat\",\n        \"img\": FEATURE_IMAGE,\n        \"system\": {\n            \"description\": {\n                \"value\": \"<p style=\\\"box-sizing:border-box;user-select:text;margin:0.5em 0px\\\"><span style=\\\"font-family:Signika, sans-serif\\\">You can move through the space of other creatures and ignore difficult terrain; the first time you enter the space of another creature on a turn, it takes 1d6 fire damage.</span></p>\",\n                \"chat\": \"\",\n                \"unidentified\": \"\"\n            },\n            \"source\": \"\",\n            \"activation\": {\n                \"type\": \"special\",\n                \"cost\": null,\n                \"condition\": \"You have cast the Become Fire Spell\"\n            },\n            \"duration\": {\n                \"value\": \"\",\n                \"units\": \"inst\"\n            },\n            \"cover\": null,\n            \"crewed\": false,\n            \"target\": {\n                \"value\": null,\n                \"width\": null,\n                \"units\": \"\",\n                \"type\": \"creature\"\n            },\n            \"range\": {\n                \"value\": null,\n                \"long\": null,\n                \"units\": \"\"\n            },\n            \"uses\": {\n                \"value\": null,\n                \"max\": \"\",\n                \"per\": null,\n                \"recovery\": \"\"\n            },\n            \"consume\": {\n                \"type\": \"\",\n                \"target\": null,\n                \"amount\": null\n            },\n            \"ability\": \"\",\n            \"actionType\": \"other\",\n            \"attackBonus\": \"\",\n            \"chatFlavor\": \"\",\n            \"critical\": {\n                \"threshold\": null,\n                \"damage\": \"\"\n            },\n            \"damage\": {\n                \"parts\": [\n                    [\n                        \"1d6\",\n                        \"fire\"\n                    ]\n                ],\n                \"versatile\": \"\"\n            },\n            \"formula\": \"\",\n            \"save\": {\n                \"ability\": \"\",\n                \"dc\": null,\n                \"scaling\": \"spell\"\n            },\n            \"type\": {\n                \"value\": \"\",\n                \"subtype\": \"\"\n            },\n            \"requirements\": \"\",\n            \"recharge\": {\n                \"value\": null,\n                \"charged\": false\n            }\n        },\n        \"effects\": [],\n        \"sort\": 200000,\n        \"ownership\": {\n            \"default\": 0,\n            \"4ft25hP617oXIBoS\": 3\n        },\n        \"flags\": {\n            \"midi-qol\": {\n                \"effectActivation\": false,\n                \"fumbleThreshold\": null\n            },\n            \"midiProperties\": {\n                \"nodam\": false,\n                \"fulldam\": false,\n                \"halfdam\": false,\n                \"autoFailFriendly\": false,\n                \"autoSaveFriendly\": false,\n                \"rollOther\": false,\n                \"critOther\": false,\n                \"offHandWeapon\": false,\n                \"magicdam\": false,\n                \"magiceffect\": false,\n                \"concentration\": false,\n                \"toggleEffect\": false,\n                \"ignoreTotalCover\": false\n            },\n            \"core\": {\n                \"sourceId\": \"Item.1TAdE8o00cSHNrUE\"\n            }\n        },\n        \"_stats\": {\n            \"systemId\": \"dnd5e\",\n            \"systemVersion\": \"2.2.1\",\n            \"coreVersion\": \"10.291\",\n            \"createdTime\": 1686147535189,\n            \"modifiedTime\": 1686157934417,\n            \"lastModifiedBy\": \"4ft25hP617oXIBoS\"\n        },\n        \"_id\": \"tl9hcRrIyKRRPmAH\"\n    }\n\n    async function becomeFire(token, workflow) {\n\n        async function effectMacroDelete() {\n            await warpgate.revert(token.document, 'Become Fire');\n        }\n\n        let targetToken = workflow.token;\n        let effectData = {\n            'label': \"Become Fire\",\n            'icon': workflow.item.img,\n            'duration': {\n                \"rounds\": 1,\n            },\n            'changes': [\n                { key: 'flags.midi-qol.onUseMacroName', value: 'ItemMacro, all', mode: 0, priority: 20 }\n            ],\n            'origin': workflow.item.uuid,\n            'flags': {\n                'dae': {\n                    'specialDuration': ['turnstartSource']\n                },\n                'effectmacro': {\n                    'onDelete': {\n                        'script': `(${effectMacroDelete})()`\n                    }\n                },\n            }\n        };\n        let updates = {\n            'embedded': {\n                'Item': {\n                    [featureData.name]: featureData\n                },\n                'ActiveEffect': {\n                    [effectData.label]: effectData\n                }\n            }\n        };\n        let options = {\n            'permanent': false,\n            'name': \"Become Fire\",\n            'description': \"Become Fire\"\n        };\n        await actor.setFlag(\"world\", \"gw.becomeFire.prompt\", true);\n        await warpgate.mutate(targetToken.document, updates, {}, options);\n    }\n\n    await becomeFire(token, workflow)\n}",
        "author": "4ft25hP617oXIBoS",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "core": {
      "sourceId": "Item.zdJQcvcXHFjYuEg2"
    },
    "exportSource": {
      "world": "ddf-friends-characters",
      "system": "dnd5e",
      "coreVersion": "10.291",
      "systemVersion": "2.2.1"
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.2.1",
    "coreVersion": "10.291",
    "createdTime": 1686070136943,
    "modifiedTime": 1687527954306,
    "lastModifiedBy": "4ft25hP617oXIBoS"
  }
}