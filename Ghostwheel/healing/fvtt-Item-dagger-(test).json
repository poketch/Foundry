{
  "name": "Dagger (test)",
  "type": "weapon",
  "img": "icons/weapons/daggers/dagger-jeweled-purple.webp",
  "data": {
    "description": {
      "value": "<p>A short metal blade mounted to a small hilt and crossguard. The dagger makes an effective side armament for hardened warriors or a hidden blade for assassins and thieves.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 149",
    "quantity": 1,
    "weight": 1,
    "price": 2,
    "attunement": 0,
    "equipped": true,
    "rarity": "common",
    "identified": true,
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 0,
      "units": ""
    },
    "target": {
      "value": 0,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": 20,
      "long": 60,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "mwak",
    "attackBonus": "0",
    "chatFlavor": "",
    "critical": {
      "threshold": 20,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "1d4 + @mod",
          "piercing"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "armor": {
      "value": 10
    },
    "hp": {
      "value": 0,
      "max": 0,
      "dt": null,
      "conditions": ""
    },
    "weaponType": "simpleM",
    "baseItem": "dagger",
    "properties": {
      "fin": true,
      "lgt": true,
      "thr": true,
      "amm": false,
      "hvy": false,
      "fir": false,
      "foc": false,
      "lod": false,
      "rch": false,
      "rel": false,
      "ret": false,
      "spc": false,
      "two": false,
      "ver": false,
      "ada": false,
      "mgc": false,
      "sil": false
    },
    "proficient": true
  },
  "effects": [],
  "flags": {
    "core": {
      "sourceId": "Compendium.dnd5e.items.0E565kQUBmndJ1a2"
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[preActiveEffects]ItemMacro",
      "fumbleThreshold": null
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Dagger (test)",
          "type": "script",
          "author": "4ft25hP617oXIBoS",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "if (args[0].tag === 'OnUse') {\n    if (args[0].hitTargets.length < 1) return\n    \n    const attack_name = \"Dagger (test)\"\n    const healing_amt = \"1d4\"\n\n\n    const sourceToken = await fromUuid(args[0].tokenUuid);\n    const source = sourceToken.actor;\n\n    let messageList = game.messages.filter(i => i.data.speaker.alias == source.name && i.data.flavor === attack_name)\n    const workflow = MidiQOL.Workflow.getWorkflow(messageList[messageList.length - 1].data.flags['midi-qol'].workflowId)\n\n    if (messageList[messageList.length - 1].data.content.includes(\"hits\")) \n    {\n        let hpRoll = await new Roll(healing_amt).evaluate({ async : true})\n        \n        new MidiQOL.DamageOnlyWorkflow(workflow.actor, workflow.token, hpRoll.total, \"healing\", workflow.actor ? [workflow.actor] : [], hpRoll, {flavor: `${attack_name} healing`, itemCardId: workflow.itemCardId})\n\n        let newHp = Math.min(source.data.data.attributes.hp.value + hpRoll.total, \n        source.data.data.attributes.hp.max)\n        source.update({'data.attributes.hp.value' : newHp})\n    }\n    console.log(\"dagger_healing executed\")\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "exportSource": {
      "world": "ddf-friends-characters",
      "system": "dnd5e",
      "coreVersion": "9.249",
      "systemVersion": "1.6.2"
    }
  }
}