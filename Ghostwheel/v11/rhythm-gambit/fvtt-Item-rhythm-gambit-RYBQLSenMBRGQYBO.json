{
  "folder": null,
  "name": "Rhythm Gambit",
  "type": "feat",
  "img": "icons/svg/item-bag.svg",
  "system": {
    "description": {
      "value": "<p>Beginning at 7th level, if you attack with a melee weapon that would deal damage on a successful hit, you may choose to grant yourself advantage on the attack roll. If you do so, you deal no damage and cause no additional effects on the hit (as though you had missed your target), but instead apply one stack of Rhythm Gambit to the target. These stacks remain on the target until the end of your next turn, at which point all stacks disappear regardless of when they were applied.</p><p>If a creature has at least one stack of Rhythm Gambit applied to it at the start of your turn, you add twice your proficiency bonus to damage with melee weapon attacks made against that creature for each stack applied.</p><p>If you apply a stack of Rhythm Gambit to a creature while another creature has stacks of Rhythm Gambit applied to it, the stacks on the first creature immediately disappear.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "",
      "units": ""
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": ""
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": ""
    },
    "consume": {
      "type": "",
      "target": null,
      "amount": null
    },
    "ability": "str",
    "actionType": "msak",
    "attackBonus": "",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "type": {
      "value": "",
      "subtype": ""
    },
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": false
    }
  },
  "effects": [
    {
      "name": "Rhythm Gambit",
      "icon": "icons/svg/item-bag.svg",
      "origin": "Actor.CQsuUekqVwZyW7CH.Item.b4Ukj9erPmPIWGYS",
      "duration": {
        "rounds": 1,
        "startTime": null,
        "seconds": null,
        "combat": null,
        "turns": 1,
        "startRound": null,
        "startTurn": null
      },
      "transfer": false,
      "disabled": false,
      "_id": "0EdhPD5g8cDrJsaj",
      "changes": [],
      "description": "",
      "statuses": [],
      "flags": {
        "times-up": {
          "isPassive": false
        },
        "dae": {
          "disableIncapacitated": false,
          "selfTarget": false,
          "selfTargetAlways": false,
          "dontApply": false,
          "stackable": "count",
          "showIcon": false,
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [
            "None"
          ]
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "nameOverride": "",
          "radius": "",
          "alignment": "",
          "type": "",
          "customCheck": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false,
          "wallsBlock": "system"
        },
        "effectmacro": {
          "onCreate": {
            "script": "const actors = scene.tokens.filter(t => t != token.document).map(t => t.actor);\n\nfor (const a of actors) {\n\n    const eff = a.effects.filter(e => e.name.startsWith(origin.name)).map(e => e.id);\n    await a.deleteEmbeddedDocuments(\"ActiveEffect\", eff);\n}\n\nif (!game.combat) return;\n\nif (game.combat.current.tokenId != origin.actor.token.id) {\n    actor.setFlag(\"world\", \"gwgw.gambit.setRound\", game.combat.round-1);\n    return;\n}\n\nif (actor.effects.some(e => parseInt(e.name.split('(')[1],10) == 1)) {\n    actor.setFlag(\"world\", \"gwgw.gambit.setRound\", game.combat.round);\n}\n\n"
          },
          "onDelete": {
            "script": "if (game.combat.current.tokenId === origin.actor.token.id) return;\nactor.unsetFlag(\"world\", \"gwgw.gambit.setRound\");"
          },
          "onEachTurn": {
            "script": "if (game.combat.previous.tokenId != origin.actor.token.id) return;\nif (actor.getFlag(\"world\", \"gwgw.gambit.setRound\")+1 > game.combat.previous.round) return;\n\nconst effId = actor.effects.filter(e => e.name.startsWith(origin.name)).map(e => e.id);\n\nactor.deleteEmbeddedDocuments(\"ActiveEffect\", effId);"
          }
        }
      },
      "tint": null
    },
    {
      "name": "Advantage on Rhythm Gambit",
      "icon": "icons/svg/item-bag.svg",
      "origin": "Scene.Xaab6U7IiDUSU1do.Token.elK3Gb737VmLgJjj.Actor.GfGpG6QWIFFCTF4O.Item.BV1t3cvvoF0xwjJV",
      "duration": {
        "startTime": null,
        "seconds": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "transfer": true,
      "disabled": false,
      "_id": "r6lisxn5dOJPlOta",
      "changes": [
        {
          "key": "flags.midi-qol.advantage.attack.all",
          "mode": 0,
          "value": "workflow.item.name === \"Rhythm Gambit\"",
          "priority": 20
        }
      ],
      "description": "",
      "statuses": [],
      "flags": {
        "times-up": {
          "isPassive": true
        },
        "dae": {
          "disableIncapacitated": false,
          "selfTarget": false,
          "selfTargetAlways": false,
          "dontApply": false,
          "stackable": "noneName",
          "showIcon": false,
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": []
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "nameOverride": "",
          "radius": "",
          "alignment": "",
          "type": "",
          "customCheck": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false,
          "wallsBlock": "system"
        },
        "core": {
          "sourceId": "Item.jCA5O7Vnk4GkCyrD.ActiveEffect.vMGWL4bpINHWmSTC"
        },
        "effectmacro": {
          "dnd5e": {
            "rollDamage": {
              "script": "const messages = [...game.messages];\nconst last_message = messages[messages.length - 1];\nconst workflow = MidiQOL.Workflow.getWorkflow(last_message.flags['midi-qol'].workflowId);\n\nif (workflow.item.system.actionType != \"mwak\") return;\n\nconst targets = [...workflow.targets];\nconst target = targets.filter(t => [...t.actor.effects].some(e => e.name.startsWith(origin.name)));\n\nif (target.length != 1) return;\nif (!workflow.hitTargets.has(target[0])) return;\n\nconst tactor = target[0].actor;\nconst diceNumber = parseInt(tactor.effects.filter(e => e.name.startsWith(origin.name))[0].name.split('(')[1], 10);\nconst damageRoll = await new Roll(`${this.roll.formula} + ${diceNumber}*${actor.system.attributes.prof}`, {}, this.roll.options).evaluate();\n\nworkflow.damageRoll = damageRoll;\n"
            }
          }
        }
      },
      "tint": null
    }
  ],
  "flags": {
    "custom-character-sheet-sections": {
      "sectionName": ""
    },
    "midi-qol": {
      "fumbleThreshold": null,
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "rollOther": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "noConcentrationCheck": false,
      "toggleEffect": false,
      "ignoreTotalCover": false
    },
    "core": {},
    "exportSource": {
      "world": "gwgw-white-room",
      "system": "dnd5e",
      "coreVersion": "11.313",
      "systemVersion": "2.3.1"
    },
    "world": {
      "gwgw": {
        "gambit": {}
      }
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.3.1",
    "coreVersion": "11.313",
    "createdTime": 1698682286721,
    "modifiedTime": 1698717871920,
    "lastModifiedBy": "I2MAHHn5ZCovi1bW"
  }
}